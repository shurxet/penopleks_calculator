name: Build and deploy workflow
on:
  push:
    tags:
      - 'v*'
jobs:
  build_and_push:
    runs-on: ubuntu-22.04
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/penoplex_calculations
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: ./backend/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-22.04
    needs: build_and_push
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      NGINX_EXTERNAL_PORT: ${{ secrets.NGINX_EXTERNAL_PORT }}
      NGINX_EXTERNAL_SSL_PORT: ${{ secrets.NGINX_EXTERNAL_SSL_PORT }}

    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: decrypt ansible
        uses: anthonykgross/ansible-vault-cli-github-action@v1
        with:
          vault_key: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
          command: "ansible-vault decrypt deploy/.env"
      - name: render compose
        run: |
          cat deploy/docker-compose-ci.yml | envsubst > deploy/docker-compose.yml
          rm deploy/docker-compose-ci.yml
      - name: copy files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: "pc_ci"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd pc_ci
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker compose pull
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker compose up -d --build
